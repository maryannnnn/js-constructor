{"id":"../node_modules/model/lib/index.js","dependencies":[{"name":"E:\\Books\\JavaScript\\js_constructor\\package.json","includedInParent":true,"mtime":1613955421658},{"name":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\package.json","includedInParent":true,"mtime":1406614599000},{"name":"util","loc":{"line":44,"column":19},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\util\\util.js"},{"name":"events","loc":{"line":46,"column":27},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\events\\events.js"},{"name":"utilities","loc":{"line":47,"column":20},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\utilities\\lib\\index.js"},{"name":"./base_config","loc":{"line":48,"column":21},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\base_config.js"},{"name":"./adapters","loc":{"line":49,"column":23},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\adapters\\index.js"},{"name":"./validators","loc":{"line":71,"column":28},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\validators.js"},{"name":"./formatters","loc":{"line":72,"column":28},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\formatters.js"},{"name":"./migration","loc":{"line":73,"column":27},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\migration\\index.js"},{"name":"./query/query","loc":{"line":1154,"column":16},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\query\\query.js"},{"name":"./datatypes","loc":{"line":1155,"column":26},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\datatypes.js"},{"name":"./association","loc":{"line":1156,"column":22},"parent":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\index.js","resolved":"E:\\Books\\JavaScript\\js_constructor\\node_modules\\model\\lib\\association\\index.js"}],"generated":{"js":"/*\n * Geddy JavaScript Web development framework\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/*\nExample model file, would be app/models/user.js:\n\nvar User = function () {\n  this.property('login', 'string', {required: true});\n  this.property('password', 'string', {required: true});\n  this.property('lastName', 'string');\n  this.property('firstName', 'string');\n\n  this.validatesPresent('login');\n  this.validatesFormat('login', /[a-z]+/, {message: 'Subdivisions!'});\n  this.validatesLength('login', {min: 3});\n  this.validatesConfirmed('password', 'confirmPassword');\n  this.validatesWithFunction('password',\n      function (s) { return s.length > 0; // Could be anything\n  });\n};\n\nUser.prototype.someMethod = function () {\n  // Do some stuff on a User instance\n};\n\nUser = model.register('User', User);\n*/\n\nvar util = require('util') // Native Node util module\n  , model = {}\n  , EventEmitter = require('events').EventEmitter\n  , utils = require('utilities')\n  , config = require('./base_config')\n  , adapters = require('./adapters')\n  , Query\n  , query // Lazy-load query; it depends on model/index\n  , association; // Lazy-load query; it depends on model/index\n\nvar _foreignKeyCreators = []\n  , _systemProperties = {\n      id: true\n    , type: true\n    , createdAt: true\n    , updatedAt: true\n    };\n\nutils.mixin(model, new (function () {\n\n  this.config = config;\n  this.ModelBase = function () {};\n  this.adapters = {};\n  this.descriptionRegistry = {};\n  this.defaultAdapter = null;\n\n  this.datatypes = null // Lazy-load query; it depends on model/index\n  this.validators = require('./validators');\n  this.formatters = require('./formatters');\n  this.Migration = require('./migration').Migration;\n  this.log = function () {};\n\n  util.inherits(this.ModelBase, EventEmitter);\n\n  var _createModelItemConstructor = function (def) {\n    // Base constructor function for all model items\n    var ModelItemConstructor = function (params) {\n      var self = this\n        , associations = model.descriptionRegistry[def.name].associations;\n\n      this.type = def.name;\n      // Items fetched from an API should have this flag set to true\n      this._saved = params._saved || false;\n\n      // If fetched and instantiated from an API-call, give the\n      // instance the appropriate ID -- newly created objects won't\n      // have one until saved\n      if (params.id) {\n        this.id = params.id;\n      }\n\n      this.isValid = function () {\n        return !this.errors;\n      };\n\n      /**\n        @name ModelBase#save\n        @public\n        @function\n        @description Saves an instance of a Geddy ModelBase\n        @param {Object} [opts]\n          @param {String} [opts.locale=null] Optional locale for\n          localizing error messages from validations\n        @param {Function} [callback] Callback function that receives\n        the result of the save action -- should be in the format of\n        function (err, result) {}\n       */\n      this.save = function () {\n        var args = Array.prototype.slice.call(arguments)\n          , m = model[this.type];\n        args.unshift(this);\n        this._commitAssociationChanges(function (err, data) {\n          var cb;\n          if (err) {\n            cb = args.pop();\n            return cb(err);\n          }\n          m.save.apply(m, args);\n        });\n      };\n\n      /**\n        @name ModelBase#updateProperties\n        @public\n        @function\n        @description Updates the attributes an instance of a Geddy\n        ModelBase, and validate the changes\n        @param {Object} params Object-literal with updated values for\n        the instance\n        the result of the save action -- should be in the format of\n        function (err, result) {}\n        @param {Object} [opts]\n          @param {String} [opts.locale=null] Optional locale for\n          localizing error messages from validations\n       */\n      this.updateProperties = function (params, opts) {\n        model.updateItem(this, params, opts || {});\n      };\n      // TODO: Deprecate?\n      this.updateAttributes = this.updateProperties;\n      /**\n        @name ModelBase#toJSON\n        @public\n        @function\n        @description Returns an object with just the data properties\n        defined by its model\n       */\n      this.toJSON = function (options) {\n        var self = this\n          , opts = options || {}\n          , whitelist = Object.keys(_systemProperties)\n          , obj = {}\n          , reg = model.descriptionRegistry[this.type]\n          , properties = reg.properties\n          , associations = reg.associations || {}\n          , assns = {\n              hasMany: 'plural'\n            , hasOne: 'singular'\n            , belongsTo: 'singular'\n            }\n          , assnList\n          , assnName;\n\n        whitelist = whitelist.concat(opts.whitelist || [])\n\n        // First, simple defined properties\n        for (var p in properties) {\n          obj[p] = this[p];\n        }\n\n        // Assocations\n        for (var k in assns) {\n          assnList = associations[k];\n          for (var p in assnList) {\n            assnName = utils.string.getInflection(p, 'property', assns[k]);\n            if (this[assnName]) {\n              obj[assnName] = this[assnName];\n            }\n          }\n        }\n\n        // Any non-defined, but whitelisted properties\n        whitelist.forEach(function (p) {\n          if (self[p]) {\n            obj[p] = self[p];\n          }\n        });\n\n        return obj;\n      };\n\n      this.toData = this.toJSON;\n      this.toObj = this.toJSON;\n\n      this.toString = function () {\n        var obj = {}\n          , reg = model.descriptionRegistry[this.type]\n          , properties = reg.properties\n          , formatter;\n\n        obj.id = this.id;\n        obj.type = this.type;\n\n        for (var p in properties) {\n          formatter = model.formatters[properties[p].datatype];\n          obj[p] = typeof formatter == 'function' ?\n              formatter(this[p]) : this[p];\n        }\n\n        return JSON.stringify(obj);\n      };\n\n\n      this._getAssociation = association._getAssociation;\n      this._createAssociation = association._createAssociation;\n      this._removeAssociation = association._removeAssociation;\n      this._commitAssociationChanges = association._commitAssociationChanges;\n\n      /**\n        @name ModelBase#clone\n        @private\n        @function\n        @description Creates a 'deep copy' of the model object\n      */\n      this.clone = function () {\n        var itemClone;\n\n        // clone the item\n        itemClone = model[this.type].create(utils.enhance({}, this.toJSON(), {id:this.id}));\n        itemClone.associations = utils.enhance({}, this.associations);\n        itemClone._saved = this._saved;\n\n        return itemClone;\n      };\n\n      // Intstance-methods for associations\n      // get..., set.../add..., remove...\n      ['hasMany', 'hasOne', 'belongsTo'].forEach(function (k) {\n        var assns\n          , createMethod = function (type, keyName, assnType) {\n              return function () {\n                var args = Array.prototype.slice.call(arguments);\n                args.unshift(assnType);\n                args.unshift(keyName);\n                self[type + 'Association'].apply(self, args);\n              };\n            };\n        if ((assns = associations[k])) {\n          for (var assnName in assns) {\n            (function (assnName) {\n              var methodName = k == 'hasMany' ?\n                      utils.inflection.pluralize(assnName) : assnName\n                , keyForCreate = k == 'hasMany' ? 'add' : 'set';\n\n              // get can be singular or plural, depending on hasMany/hasOne\n              // this.getBooks({}, {}, function () {}); =>\n              // this._getAssociation('Book', 'hasMany', {}, {}, function () {});\n              self['get' + methodName] = createMethod('_get', assnName, k);\n\n              // add/set is always singular, just use assnName for method\n              // this.addBook(book); =>\n              // this._createAssociation('Book', 'hasMany', book);\n              self[keyForCreate + assnName] = createMethod('_create', assnName, k);\n\n              // this.removeBook(book); =>\n              // this._removeAssociation('Book', 'hasMany', book);\n              self['remove' + assnName] = createMethod('_remove', assnName, k);\n            })(assnName);\n          }\n        }\n      });\n\n    };\n\n    return ModelItemConstructor;\n  };\n\n  var _createStaticMethodsMixin = function (name) {\n    var obj = {};\n\n    /**\n      @name ModelBase.create\n      @public\n      @static\n      @function\n      @description Creates an instance of a Geddy ModelBase, validating\n      the input parameters\n      @param {Object} params Object-literal with updated values for\n      the instance\n      the result of the save action -- should be in the format of\n      function (err, result) {}\n      @param {Object} [opts]\n        @param {String} [opts.locale=null] Optional locale for\n        localizing error messages from validations\n     */\n    obj.create = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args.unshift(name);\n      return model.createItem.apply(model, args);\n    };\n\n    obj.getAdapter = function() {\n      return model.getAdapterForModel(name);\n    };\n\n    // Returns the first item found\n    obj.first = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , callback = args.pop()\n        , query = args.shift() || {}\n        , opts = args.shift() || {}\n        , includeOpts;\n\n      if (typeof query == 'string' || typeof query == 'number') {\n        query = {id: query};\n      }\n\n      if (!opts.id) {\n        opts.limit = 1;\n        // Can't use simple LIMIT with eager-fetch of associations\n        // Do an additional query with LIMIT to fetch the first object,\n        // then the normal query by ID with associations\n        if (opts.includes) {\n          includeOpts = utils.mixin({}, opts);\n          delete includeOpts.includes;\n          return obj.all(query, includeOpts, function (err, data) {\n            if (err) {\n              return callback(err, null);\n            }\n            if (data && data.id) {\n              delete opts.limit;\n              // TODO: If queries eventually return EventEmitters,\n              // need to proxy the events upward to the wrapping query\n              obj.all({id: data.id}, opts, function (err, data) {\n                if (err) {\n                  return callback(err, null);\n                }\n                if (data && data.length) {\n                  callback(null, data[0]);\n                }\n                else {\n                  callback(null, null);\n                }\n              });\n            }\n            else {\n              callback(null, null);\n            }\n          });\n        }\n      }\n\n      return obj.all(query, opts, callback);\n    };\n\n    obj.count = function() {\n      var args = Array.prototype.slice.call(arguments)\n        , callback = args.pop() || function () {}\n        , query = args.shift() || {}\n        , opts = args.shift() || {};\n      opts.count = true;\n      if (opts.includes) {\n        throw new Error('`count` cannot be used with eager fetch of associations.');\n      }\n      return obj.all.apply(obj, [query, opts, callback]);\n    };\n\n    // TODO: Deprecate\n    obj.load = obj.first;\n\n    obj.all = function () {\n      var args = Array.prototype.slice.call(arguments)\n      // Important: do not stub out a callback -- if a callback is\n      // defined, all results of the query will be buffered\n        , callback = typeof args[args.length - 1] == 'function' ?\n              args.pop() : null\n        , query = args.shift() || {}\n        , opts = args.shift() || {}\n        , adapt;\n\n      opts.scenario = opts.scenario || 'reify';\n\n      query = new Query(model[name], query, opts);\n\n      adapt = model.getAdapterForModel(name);\n      if (opts.includes && adapt.type != 'sql') {\n        throw new Error('Only SQL adapters support ' +\n            'the \"includes\" option for queries.');\n      }\n\n      return adapt.load.apply(adapt, [query, callback]);\n    };\n\n    obj.save = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , beforeSaveArgs = args.slice()\n        , emitFunc = function () {\n            model[name].emit.apply(model[name], beforeSaveArgs);\n          }\n        , data = args.shift()\n        , callback = args.pop() || function () {}\n        , opts = args.shift() || {}\n        , adapt\n        , saved\n        , item\n        , isCollection;\n\n      beforeSaveArgs.unshift('beforeSave');\n\n      adapt = model.getAdapterForModel(name);\n\n      isCollection = Array.isArray(data);\n      // Collection\n      // Bulk save only works on new items -- existing item should only\n      // be when doing instance.save because update takes only one set\n      // of edited props to be applied to all items\n      if (isCollection) {\n\n        emitFunc();\n\n        saved = false;\n        for (var i = 0, ii = data.length; i < ii; i++) {\n          item = data[i];\n          if (item._saved) {\n            return callback(new Error('A bulk-save can only have new ' +\n                'items in it.'), null);\n          }\n          // Bail out if any instance isn't valid and no force flag\n          if (!(item.isValid() || opts.force)) {\n            return callback(item.errors, null);\n          }\n        }\n      }\n      // Single item\n      else {\n\n        saved = data._saved;\n        // Bail out if instance isn't valid\n        if (!(data.isValid() || opts.force)) {\n          return callback(data.errors, null);\n        }\n        // Already existing instance, use update\n        if (saved) {\n          if (model.config.useTimestamps) {\n            data.updatedAt = new Date();\n          }\n          // Re-route to update\n          return obj.update.apply(obj, [data, {id: data.id},\n              opts, callback]);\n        }\n\n        if (typeof data.beforeSave === 'function') {\n          data.beforeSave();\n        }\n        data.emit('beforeSave');\n        emitFunc();\n      }\n\n      return adapt.insert.apply(adapt, [data, opts, function (err, res) {\n        if (!err) {\n          model[name].emit('save', res);\n          if (!isCollection) {\n            if (typeof data.afterSave === 'function') {\n              data.afterSave();\n            }\n\n            data.emit('save');\n          }\n        }\n        callback(err, res);\n      }]);\n    };\n\n    obj.update = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , data\n        , callback\n        , query\n        , opts\n        , adapt;\n\n      args.unshift('beforeUpdate');\n      model[name].emit.apply(model[name], args);\n      args.shift();\n\n      data = args.shift();\n      callback = args.pop() || function () {};\n      query = args.shift() || {};\n      opts = args.shift() || {};\n\n      if (typeof query == 'string' || typeof query == 'number') {\n        query = {id: query};\n      }\n\n      // Data may by just a bag or params, or an actual instance\n      if (data instanceof model.ModelBase) {\n        // Bail out if instance isn't valid\n        if (!(data.isValid() || opts.force)) {\n          return callback(data.errors, null);\n        }\n        data.emit('beforeUpdate');\n      }\n\n      query = new Query(model[name], query, opts);\n\n      adapt = model.getAdapterForModel(name);\n\n      return adapt.update.apply(adapt, [data, query, function (err, res) {\n        if (!err) {\n          model[name].emit('update', res);\n          // Data may by just a bag or params, or an actual instance\n          if (typeof data.emit == 'function') {\n            if (typeof data.afterUpdate === 'function') {\n              data.afterUpdate();\n            }\n            data.emit('update');\n          }\n        }\n        callback(err, res);\n      }]);\n    };\n\n    obj.remove = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , query\n        , callback\n        , opts\n        , adapt;\n\n      args.unshift('beforeRemove');\n      model[name].emit.apply(model[name], args);\n      args.shift();\n\n      query = args.shift();\n      callback = args.pop() || function () {};\n      opts = args.shift() || {};\n\n      if (typeof query == 'string' || typeof query == 'number') {\n        query = {id: query};\n        opts.limit = 1;\n      }\n\n      query = new Query(model[name], query, opts);\n\n      adapt = model.getAdapterForModel(name);\n\n      return adapt.remove.apply(adapt, [query, function (err, res) {\n        if (!err) {\n          model[name].emit('remove', res);\n        }\n        callback(err, res);\n      }]);\n    };\n\n    obj.getPropertyNames = function () {\n      var reg = model.descriptionRegistry[name]\n        , properties = reg.properties;\n      return Object.keys(properties);\n    };\n\n    obj.modelName = name;\n\n    return obj;\n  };\n\n  this.clearDefinitions = function (defs) {\n    var self = this;\n    defs.forEach(function (m) {\n      // Prefer 'name', accept older 'ctorName'\n      var name = m.name || m.ctorName;\n      // Registration may have happened in the model definition file\n      // if using the old templates. Don't re-register\n      delete self[name];\n    });\n  };\n\n  this.registerDefinitions = function (defs) {\n    var self = this;\n    defs.forEach(function (m) {\n      // Prefer 'name', accept older 'ctorName'\n      var name = m.name || m.ctorName;\n      // Registration may have happened in the model definition file\n      // if using the old templates. Don't re-register\n      if (!self[name]) {\n        self.registerDefinition(name, m.ctor);\n      }\n    });\n    this.createForeignKeys();\n  };\n\n  // Alias to single-def registration method\n  this.register = function (name, ModelDefinition) {\n    return this.registerDefinition(name, ModelDefinition);\n  };\n\n  this.registerDefinition = function (name, ModelDefinition) {\n    var origProto = ModelDefinition.prototype\n      , defined\n      , ModelCtor;\n\n    // Create the place to store the metadata about the model structure\n    // to use to do validations, etc. when constructing\n    model.descriptionRegistry[name] = new model.ModelDescription(name);\n    // Execute all the definition methods to create that metadata\n    ModelDefinition.prototype = new model.ModelDefinitionBase(name);\n    defined = new ModelDefinition();\n\n    // Create the constructor function to use when calling static\n    // ModelCtor.create. Gives them the proper instanceof value,\n    // and .valid, etc. instance-methods.\n    ModelCtor = _createModelItemConstructor(defined);\n\n    // Mix in the static methods like .create and .load\n    utils.mixin(ModelCtor, _createStaticMethodsMixin(name));\n    // Mix on the statics on the definition 'ctor' onto the\n    // instantiated ModelDefinition instance\n    utils.mixin(defined, ModelDefinition);\n    // Mix ModelDefinition instance properties as static properties\n    // for the model item 'ctor'\n    utils.mixin(ModelCtor, defined);\n    // Same with EventEmitter methods\n    utils.enhance(ModelCtor, new EventEmitter());\n\n    // Mix any functions defined directly in the model-item definition\n    // 'constructor' into the original prototype, and set it as the prototype of the\n    // actual constructor\n    utils.mixin(origProto, defined);\n\n    ModelCtor.prototype = new model.ModelBase();\n    // Preserve any inherited shit from the definition proto\n    utils.enhance(ModelCtor.prototype, origProto);\n\n    model[name] = ModelCtor;\n\n    return ModelCtor;\n  };\n\n  this.createItem = function (name, p, o) {\n    var params = p || {}\n      , opts = o || {}\n      , item = new model[name](params);\n\n    // Default to the 'create' scenario\n    opts.scenario = opts.scenario || 'create'\n\n    model[name].emit('beforeCreate', p, o);\n\n    this.validateAndUpdateFromParams(item, params, opts);\n\n    if (this.config.useTimestamps && !item.createdAt) {\n      item.createdAt = new Date();\n    }\n\n    if (typeof item.afterCreate === 'function') {\n      item.afterCreate();\n    }\n    model[name].emit('create', item);\n    return item;\n  };\n\n  this.updateItem = function (item, params, opts) {\n    var data = {}\n      , name = item.type\n      , opts = opts || {};\n\n    // Default to the 'update' scenario\n    opts.scenario = opts.scenario || 'update'\n\n    model[name].emit('beforeUpdateProperties', item, params, opts);\n    item.emit('beforeUpdateProperties');\n\n    utils.mixin(data, item);\n    utils.mixin(data, params);\n    this.validateAndUpdateFromParams(item, data, opts);\n\n    if (typeof item.afterUpdateProperties === 'function') {\n      item.afterUpdateProperties();\n    }\n\n    model[name].emit('updateProperties', item);\n    item.emit('updateProperties');\n\n    return item;\n  };\n\n  this.validateAndUpdateFromParams = function (item, passedParams, opts) {\n    var params\n      , name = item.type\n      , type = model.descriptionRegistry[name]\n      , properties = type.properties\n      , validated = null\n      , errs = null\n      , camelizedKey\n      , skip = opts.skip\n      , scenario = opts.scenario\n      , skipKeys = {}\n      , val;\n\n    if (typeof item.beforeValidate === 'function') {\n      item.beforeValidate(passedParams);\n    }\n    item.emit('beforeValidate')\n    model[name].emit('beforeValidate', item, passedParams);\n\n    // May be revalidating, clear errors\n    delete item.errors;\n\n    // Convert snake_case names in params to camelCase\n    if (this.config.forceCamel) {\n      params = {};\n      for (var p in passedParams) {\n        // Allow leading underscores in the keys for pseudo-privates\n        camelizedKey = utils.string.camelize(p, {leadingUnderscore: true});\n        params[camelizedKey] = passedParams[p];\n      }\n    }\n    else {\n      params = passedParams;\n    }\n\n    // User-input should never contain these -- but we still want\n    // to validate them to make sure the format didn't get fucked up\n    if (typeof item.createdAt != 'undefined') {\n      params.createdAt = item.createdAt;\n    }\n    if (typeof item.updatedAt != 'undefined') {\n      params.updatedAt = item.updatedAt;\n    }\n\n    if (skip) {\n      for (var i in skip) {\n        skipKeys[skip[i]] = true;\n      }\n    }\n\n    for (var p in properties) {\n      if (skipKeys[p]) {\n        continue;\n      }\n\n      validated = this.validateProperty(properties[p], params, {scenario: scenario});\n      // If there are any failed validations, the errs param\n      // contains an Object literal keyed by field name, and the\n      // error message for the first failed validation for that\n      // property\n      // Use raw, invalid value on the instance\n      if (validated.err) {\n        errs = errs || {};\n        errs[p] = validated.err;\n        item[p] = params[p];\n      }\n      // Otherwise add the type-coerced, valid value to the return item\n      else {\n        item[p] = validated.val;\n      }\n    }\n\n    // Should never have been incuded in user input, so safe to\n    // rm these from the params\n    delete params.createdAt;\n    delete params.updatedAt;\n\n    if (errs) {\n      item.errors = errs;\n    }\n\n    if (typeof item.afterValidate === 'function') {\n      item.afterValidate();\n    }\n\n    item.emit('validate')\n    model[name].emit('validate', item);\n\n    return item;\n  };\n\n  this.validateProperty = function (prop, params, opts) {\n\n    var options = opts || {}\n      , name = prop.name\n      , val = params[name]\n      , datatypeName = prop.datatype.toLowerCase()\n      , datatypeValidator = this.datatypes[datatypeName].validate\n      , result\n      , scenario = opts.scenario\n      , locale = options.locale || utils.i18n.getDefaultLocale();\n\n    // Validate for the base datatype only if there actually is a value --\n    // e.g., undefined will fail the validation for Number, even if the\n    // field is optional\n    if (!utils.isEmpty(val)) {\n      // 'Any' datatype\n      if (prop.datatype == '*') {\n        result = {\n          val: val\n        };\n      }\n      // Specific datatype -- perform validation/type-coercion\n      else {\n        result = datatypeValidator(name, val, locale);\n        if (result.err) {\n          return {\n            err: result.err,\n            val: null\n          };\n        }\n      }\n      // Value may have been modified in the datatype check -- e.g.,\n      // 'false' changed to false, '8.0' changed to 8, '2112' changed to\n      // 2112, etc.\n      val = result.val;\n    }\n\n    // Now go through all the base validations for this property\n    var validations = prop.validations\n      , validator\n      , err\n      , rule;\n\n    for (var p in validations) {\n      validator = model.validators[p]\n      rule = utils.mixin({}, validations[p], {scenario: opts.scenario});\n\n      if (typeof validator != 'function') {\n        throw new Error(p + ' is not a valid validator');\n      }\n\n      err = validator(name, val, params, rule, locale);\n      // If there's an error for a validation, don't bother\n      // trying to continue with more validations -- just return\n      // this first error message\n      if (err) {\n        return {\n          err: err,\n          val: null\n        };\n      }\n    }\n\n    // If there weren't any errors, return the value for this property\n    // and no error\n    return {\n      err: null,\n      val: val\n    };\n  };\n\n  this.createAdapter = function (name, config) {\n    return adapters.create(name, config);\n  };\n\n  this.getAdapterInfo = function (name) {\n    return adapters.getAdapterInfo(name);\n  };\n\n  this.getAdapterForModel = function (modelName) {\n    var ctor = this[modelName]\n      , adapter = (ctor && ctor.adapter) || this.defaultAdapter;\n    if (!adapter) {\n      throw new Error('No adapter found for ' + modelName +\n          '. Please define one with `setAdapter`, or define a default' +\n          ' adapter with `model.setDefaultAdapter`.');\n    }\n    return adapter;\n  };\n\n  this.setDefaultAdapter = function (name, config) {\n    var adapter = adapters.create(name, config);\n    this.defaultAdapter = adapter;\n  };\n\n  // FIXME: Move this into an associations lib\n  this.getAssociation = function (main, assn) {\n    var mainName = utils.string.getInflection(main, 'constructor', 'singular')\n      , assnName = utils.string.getInflection(assn, 'constructor', 'singular')\n      , assn\n      , assnItem;\n    assn = this.descriptionRegistry[mainName].associations;\n    for (var p in assn) {\n      assnItem = assn[p][assnName];\n      if (assnItem) {\n        return assnItem;\n      }\n    }\n  };\n\n  this.getAssociationType = function (main, assn) {\n    var mainName = utils.string.getInflection(main, 'constructor', 'singular')\n      , assnName = utils.string.getInflection(assn, 'constructor', 'singular')\n      , assn\n      , assnItem;\n    assn = this.descriptionRegistry[mainName].associations;\n    for (var p in assn) {\n      assnItem = assn[p][assnName];\n      if (assnItem) {\n        return p;\n      }\n    }\n  };\n\n  this.getModelByName = function (name) {\n    return this[name];\n  };\n\n  this.createForeignKeys = function () {\n    var creator;\n    while((creator = _foreignKeyCreators.pop())) {\n      creator();\n    }\n  };\n\n  this.setLocalRequireError = function (msg) {\n    this.localRequireError = msg;\n  };\n\n})());\n\nmodel.ModelDefinitionBase = function (name) {\n  var self = this\n    , reg = model.descriptionRegistry\n    , _createValidator = function (p) {\n        return function () {\n          var args = Array.prototype.slice.call(arguments);\n          args.unshift(p);\n          return self.validates.apply(self, args);\n        };\n      };\n\n  this.name = name;\n\n  this.setAdapter = function (name, config) {\n    var adapter = adapters.create(name, config);\n    this.adapter = adapter;\n  };\n\n  this.property = function (name, datatype, options) {\n    var opts = options || {};\n\n    // Don't allow users to define properties with the same\n    // name as magical system properties\n    if (!opts.isSystem && _systemProperties[name]) {\n      throw new Error('You cannot define the property \"' + name +\n          '\" on a model, as it\\'s a reserved system-property name.');\n    }\n\n    reg[this.name].properties[name] =\n      new model.PropertyDescription(name, datatype, opts);\n  };\n\n  this.defineProperties = function (obj) {\n    var type\n      , options\n      , property;\n\n    for (var name in obj) {\n      property = obj[name];\n\n      if (typeof property === 'string') {\n        type = property;\n        options = {};\n      }\n      else {\n        type = property.type;\n        options = property;\n      }\n\n      this.property(name, type, options);\n    }\n  }\n\n  // (condition, name, [reference], [opts])\n  this.validates = function () {\n    var args = Array.prototype.slice.call(arguments)\n      , arg\n      , condition = args.shift()\n      , name = args.shift()\n      , reference\n      , opts = {};\n    while ((arg = args.pop())) {\n      // Regex for validatesFormat or function for validatesWithFunction\n      // or string param name for validatesConfirmed\n      if (arg instanceof RegExp || typeof arg == 'function' ||\n          typeof arg == 'string') {\n        reference = arg;\n      }\n      else {\n        opts = utils.mixin(opts, arg);\n      }\n    }\n\n    // Old API allows passing simple number to validatesLength\n    if (!isNaN(opts)) {\n      opts = {is: opts};\n    }\n\n    // Default to 'create' and 'update' only for scenarios\n    opts.on = opts.on || ['create', 'update'];\n\n    if (typeof reg[this.name].properties[name] === 'undefined') {\n      throw new Error('Validation cannot be added for \"' + name +\n                      '\": property does not exist on the ' + this.name +\n                      ' model.');\n    }\n\n    reg[this.name].properties[name].validations[condition] =\n        new model.ValidationDescription(condition, reference, opts);\n  };\n\n  // For each of the validators, create a validatesFooBar from\n  // validates('fooBar' ...\n  for (var p in model.validators) {\n    this['validates' + utils.string.capitalize(p)] = _createValidator(p);\n  }\n\n  // Add the base model properties -- these should not be handled by user input\n  if (model.config.useTimestamps) {\n    this.property('createdAt', 'datetime', {isSystem: true});\n    this.property('updatedAt', 'datetime', {isSystem: true});\n  }\n\n  ['hasMany', 'hasOne', 'belongsTo'].forEach(function (assnKey) {\n    self[assnKey] = function (name, options) {\n      var opts = options || {}\n        , assn = reg[self.name].associations[assnKey] || {}\n        , assnName = name\n        , modelName = opts.model || name;\n\n      // Normalize inflection; we don't care which they use\n      assnName = utils.string.getInflection(assnName, 'constructor', 'singular');\n      modelName = utils.string.getInflection(modelName, 'constructor', 'singular');\n\n      assn[assnName] = {\n        name: assnName\n      , model: modelName\n      , through: opts.through\n      , type: assnKey\n      };\n\n      reg[self.name].associations[assnKey] = assn;\n\n      // Set up foreign keys\n      var createForeignKey = function (assnName) {\n        return function () {\n          var ownerModelName\n            , ownedModelName\n            , idKey\n            , datatype\n            , def;\n\n          if (assnKey == 'belongsTo') {\n            ownerModelName = modelName;\n            ownedModelName = self.name;\n            idKey = modelName;\n          }\n          else {\n            ownerModelName = self.name;\n            ownedModelName = modelName;\n            idKey = self.name;\n          }\n\n          if (assnName == modelName) {\n            idKey = utils.string.decapitalize(idKey) + 'Id'\n          }\n          else {\n            idKey = utils.string.decapitalize(assnName) + idKey  + 'Id'\n          }\n\n          if (!reg[ownedModelName]) {\n            throw new Error('Model ' + ownedModelName + ' does not exist.');\n          }\n\n          if (!reg[ownedModelName].properties[idKey]) {\n            def = model[ownerModelName];\n            datatype = model.config.autoIncrementId ? 'int' : 'string';\n\n            reg[ownedModelName].properties[idKey] =\n              new model.PropertyDescription(idKey, datatype);\n          }\n        }\n      };\n\n      // Set up foreign keys except in the case of virtual 'throughs'\n      // FIXME: Hack, let other models get defined first\n      // Should probably listen for an event that signals\n      // base models are set up\n      if (!opts.through) {\n        _foreignKeyCreators.push(createForeignKey(assnName));\n      }\n    };\n  });\n};\n\nmodel.ModelDescription = function (name) {\n  this.name = name;\n  this.properties = {};\n  this.associations = {};\n};\n\nmodel.PropertyDescription = function (name, datatype, o) {\n  var opts = o || {}\n    , validations = {}\n    , validationOpts = utils.mixin({}, opts);\n\n  delete validationOpts.required;\n  delete validationOpts.length;\n  delete validationOpts.format;\n\n  this.name = name;\n  this.datatype = datatype;\n  this.options = opts;\n\n  // Creates results similar to `this.validates`, above in ModelDefinitionBase\n  // Would be great to remove the duplication of logic\n  for (var p in opts) {\n    if (opts.required || opts.length) {\n      validations.present =\n          new model.ValidationDescription('present', null, validationOpts);\n    }\n    if (opts.length) {\n      if (typeof opts.length == 'object') {\n      // {min: 1, max: 2} or {is: 3}\n      validations.length =\n          new model.ValidationDescription('length', null,\n              utils.mixin(opts.length, validationOpts));\n      }\n      // 1 or '1'\n      else {\n      validations.length =\n          new model.ValidationDescription('length', null,\n              utils.mixin({is: opts.length}, validationOpts));\n      }\n    }\n    if (opts.format) {\n      validations.format =\n          new model.ValidationDescription('length', opts.format,\n              validationOpts);\n    }\n  }\n  this.validations = validations;\n};\n\nmodel.ValidationDescription = function (type, reference, opts) {\n  this.type = type;\n  this.reference = reference;\n  this.opts = opts || {};\n};\n\nmodule.exports = model;\n\n// Load last, these depend on index.js\nQuery = require('./query/query').Query;\nmodel.datatypes = require('./datatypes');\nassociation = require('./association');\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/model/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/model/lib/index.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}}],"sources":{"../node_modules/model/lib/index.js":"/*\n * Geddy JavaScript Web development framework\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/*\nExample model file, would be app/models/user.js:\n\nvar User = function () {\n  this.property('login', 'string', {required: true});\n  this.property('password', 'string', {required: true});\n  this.property('lastName', 'string');\n  this.property('firstName', 'string');\n\n  this.validatesPresent('login');\n  this.validatesFormat('login', /[a-z]+/, {message: 'Subdivisions!'});\n  this.validatesLength('login', {min: 3});\n  this.validatesConfirmed('password', 'confirmPassword');\n  this.validatesWithFunction('password',\n      function (s) { return s.length > 0; // Could be anything\n  });\n};\n\nUser.prototype.someMethod = function () {\n  // Do some stuff on a User instance\n};\n\nUser = model.register('User', User);\n*/\n\nvar util = require('util') // Native Node util module\n  , model = {}\n  , EventEmitter = require('events').EventEmitter\n  , utils = require('utilities')\n  , config = require('./base_config')\n  , adapters = require('./adapters')\n  , Query\n  , query // Lazy-load query; it depends on model/index\n  , association; // Lazy-load query; it depends on model/index\n\nvar _foreignKeyCreators = []\n  , _systemProperties = {\n      id: true\n    , type: true\n    , createdAt: true\n    , updatedAt: true\n    };\n\nutils.mixin(model, new (function () {\n\n  this.config = config;\n  this.ModelBase = function () {};\n  this.adapters = {};\n  this.descriptionRegistry = {};\n  this.defaultAdapter = null;\n\n  this.datatypes = null // Lazy-load query; it depends on model/index\n  this.validators = require('./validators');\n  this.formatters = require('./formatters');\n  this.Migration = require('./migration').Migration;\n  this.log = function () {};\n\n  util.inherits(this.ModelBase, EventEmitter);\n\n  var _createModelItemConstructor = function (def) {\n    // Base constructor function for all model items\n    var ModelItemConstructor = function (params) {\n      var self = this\n        , associations = model.descriptionRegistry[def.name].associations;\n\n      this.type = def.name;\n      // Items fetched from an API should have this flag set to true\n      this._saved = params._saved || false;\n\n      // If fetched and instantiated from an API-call, give the\n      // instance the appropriate ID -- newly created objects won't\n      // have one until saved\n      if (params.id) {\n        this.id = params.id;\n      }\n\n      this.isValid = function () {\n        return !this.errors;\n      };\n\n      /**\n        @name ModelBase#save\n        @public\n        @function\n        @description Saves an instance of a Geddy ModelBase\n        @param {Object} [opts]\n          @param {String} [opts.locale=null] Optional locale for\n          localizing error messages from validations\n        @param {Function} [callback] Callback function that receives\n        the result of the save action -- should be in the format of\n        function (err, result) {}\n       */\n      this.save = function () {\n        var args = Array.prototype.slice.call(arguments)\n          , m = model[this.type];\n        args.unshift(this);\n        this._commitAssociationChanges(function (err, data) {\n          var cb;\n          if (err) {\n            cb = args.pop();\n            return cb(err);\n          }\n          m.save.apply(m, args);\n        });\n      };\n\n      /**\n        @name ModelBase#updateProperties\n        @public\n        @function\n        @description Updates the attributes an instance of a Geddy\n        ModelBase, and validate the changes\n        @param {Object} params Object-literal with updated values for\n        the instance\n        the result of the save action -- should be in the format of\n        function (err, result) {}\n        @param {Object} [opts]\n          @param {String} [opts.locale=null] Optional locale for\n          localizing error messages from validations\n       */\n      this.updateProperties = function (params, opts) {\n        model.updateItem(this, params, opts || {});\n      };\n      // TODO: Deprecate?\n      this.updateAttributes = this.updateProperties;\n      /**\n        @name ModelBase#toJSON\n        @public\n        @function\n        @description Returns an object with just the data properties\n        defined by its model\n       */\n      this.toJSON = function (options) {\n        var self = this\n          , opts = options || {}\n          , whitelist = Object.keys(_systemProperties)\n          , obj = {}\n          , reg = model.descriptionRegistry[this.type]\n          , properties = reg.properties\n          , associations = reg.associations || {}\n          , assns = {\n              hasMany: 'plural'\n            , hasOne: 'singular'\n            , belongsTo: 'singular'\n            }\n          , assnList\n          , assnName;\n\n        whitelist = whitelist.concat(opts.whitelist || [])\n\n        // First, simple defined properties\n        for (var p in properties) {\n          obj[p] = this[p];\n        }\n\n        // Assocations\n        for (var k in assns) {\n          assnList = associations[k];\n          for (var p in assnList) {\n            assnName = utils.string.getInflection(p, 'property', assns[k]);\n            if (this[assnName]) {\n              obj[assnName] = this[assnName];\n            }\n          }\n        }\n\n        // Any non-defined, but whitelisted properties\n        whitelist.forEach(function (p) {\n          if (self[p]) {\n            obj[p] = self[p];\n          }\n        });\n\n        return obj;\n      };\n\n      this.toData = this.toJSON;\n      this.toObj = this.toJSON;\n\n      this.toString = function () {\n        var obj = {}\n          , reg = model.descriptionRegistry[this.type]\n          , properties = reg.properties\n          , formatter;\n\n        obj.id = this.id;\n        obj.type = this.type;\n\n        for (var p in properties) {\n          formatter = model.formatters[properties[p].datatype];\n          obj[p] = typeof formatter == 'function' ?\n              formatter(this[p]) : this[p];\n        }\n\n        return JSON.stringify(obj);\n      };\n\n\n      this._getAssociation = association._getAssociation;\n      this._createAssociation = association._createAssociation;\n      this._removeAssociation = association._removeAssociation;\n      this._commitAssociationChanges = association._commitAssociationChanges;\n\n      /**\n        @name ModelBase#clone\n        @private\n        @function\n        @description Creates a 'deep copy' of the model object\n      */\n      this.clone = function () {\n        var itemClone;\n\n        // clone the item\n        itemClone = model[this.type].create(utils.enhance({}, this.toJSON(), {id:this.id}));\n        itemClone.associations = utils.enhance({}, this.associations);\n        itemClone._saved = this._saved;\n\n        return itemClone;\n      };\n\n      // Intstance-methods for associations\n      // get..., set.../add..., remove...\n      ['hasMany', 'hasOne', 'belongsTo'].forEach(function (k) {\n        var assns\n          , createMethod = function (type, keyName, assnType) {\n              return function () {\n                var args = Array.prototype.slice.call(arguments);\n                args.unshift(assnType);\n                args.unshift(keyName);\n                self[type + 'Association'].apply(self, args);\n              };\n            };\n        if ((assns = associations[k])) {\n          for (var assnName in assns) {\n            (function (assnName) {\n              var methodName = k == 'hasMany' ?\n                      utils.inflection.pluralize(assnName) : assnName\n                , keyForCreate = k == 'hasMany' ? 'add' : 'set';\n\n              // get can be singular or plural, depending on hasMany/hasOne\n              // this.getBooks({}, {}, function () {}); =>\n              // this._getAssociation('Book', 'hasMany', {}, {}, function () {});\n              self['get' + methodName] = createMethod('_get', assnName, k);\n\n              // add/set is always singular, just use assnName for method\n              // this.addBook(book); =>\n              // this._createAssociation('Book', 'hasMany', book);\n              self[keyForCreate + assnName] = createMethod('_create', assnName, k);\n\n              // this.removeBook(book); =>\n              // this._removeAssociation('Book', 'hasMany', book);\n              self['remove' + assnName] = createMethod('_remove', assnName, k);\n            })(assnName);\n          }\n        }\n      });\n\n    };\n\n    return ModelItemConstructor;\n  };\n\n  var _createStaticMethodsMixin = function (name) {\n    var obj = {};\n\n    /**\n      @name ModelBase.create\n      @public\n      @static\n      @function\n      @description Creates an instance of a Geddy ModelBase, validating\n      the input parameters\n      @param {Object} params Object-literal with updated values for\n      the instance\n      the result of the save action -- should be in the format of\n      function (err, result) {}\n      @param {Object} [opts]\n        @param {String} [opts.locale=null] Optional locale for\n        localizing error messages from validations\n     */\n    obj.create = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args.unshift(name);\n      return model.createItem.apply(model, args);\n    };\n\n    obj.getAdapter = function() {\n      return model.getAdapterForModel(name);\n    };\n\n    // Returns the first item found\n    obj.first = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , callback = args.pop()\n        , query = args.shift() || {}\n        , opts = args.shift() || {}\n        , includeOpts;\n\n      if (typeof query == 'string' || typeof query == 'number') {\n        query = {id: query};\n      }\n\n      if (!opts.id) {\n        opts.limit = 1;\n        // Can't use simple LIMIT with eager-fetch of associations\n        // Do an additional query with LIMIT to fetch the first object,\n        // then the normal query by ID with associations\n        if (opts.includes) {\n          includeOpts = utils.mixin({}, opts);\n          delete includeOpts.includes;\n          return obj.all(query, includeOpts, function (err, data) {\n            if (err) {\n              return callback(err, null);\n            }\n            if (data && data.id) {\n              delete opts.limit;\n              // TODO: If queries eventually return EventEmitters,\n              // need to proxy the events upward to the wrapping query\n              obj.all({id: data.id}, opts, function (err, data) {\n                if (err) {\n                  return callback(err, null);\n                }\n                if (data && data.length) {\n                  callback(null, data[0]);\n                }\n                else {\n                  callback(null, null);\n                }\n              });\n            }\n            else {\n              callback(null, null);\n            }\n          });\n        }\n      }\n\n      return obj.all(query, opts, callback);\n    };\n\n    obj.count = function() {\n      var args = Array.prototype.slice.call(arguments)\n        , callback = args.pop() || function () {}\n        , query = args.shift() || {}\n        , opts = args.shift() || {};\n      opts.count = true;\n      if (opts.includes) {\n        throw new Error('`count` cannot be used with eager fetch of associations.');\n      }\n      return obj.all.apply(obj, [query, opts, callback]);\n    };\n\n    // TODO: Deprecate\n    obj.load = obj.first;\n\n    obj.all = function () {\n      var args = Array.prototype.slice.call(arguments)\n      // Important: do not stub out a callback -- if a callback is\n      // defined, all results of the query will be buffered\n        , callback = typeof args[args.length - 1] == 'function' ?\n              args.pop() : null\n        , query = args.shift() || {}\n        , opts = args.shift() || {}\n        , adapt;\n\n      opts.scenario = opts.scenario || 'reify';\n\n      query = new Query(model[name], query, opts);\n\n      adapt = model.getAdapterForModel(name);\n      if (opts.includes && adapt.type != 'sql') {\n        throw new Error('Only SQL adapters support ' +\n            'the \"includes\" option for queries.');\n      }\n\n      return adapt.load.apply(adapt, [query, callback]);\n    };\n\n    obj.save = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , beforeSaveArgs = args.slice()\n        , emitFunc = function () {\n            model[name].emit.apply(model[name], beforeSaveArgs);\n          }\n        , data = args.shift()\n        , callback = args.pop() || function () {}\n        , opts = args.shift() || {}\n        , adapt\n        , saved\n        , item\n        , isCollection;\n\n      beforeSaveArgs.unshift('beforeSave');\n\n      adapt = model.getAdapterForModel(name);\n\n      isCollection = Array.isArray(data);\n      // Collection\n      // Bulk save only works on new items -- existing item should only\n      // be when doing instance.save because update takes only one set\n      // of edited props to be applied to all items\n      if (isCollection) {\n\n        emitFunc();\n\n        saved = false;\n        for (var i = 0, ii = data.length; i < ii; i++) {\n          item = data[i];\n          if (item._saved) {\n            return callback(new Error('A bulk-save can only have new ' +\n                'items in it.'), null);\n          }\n          // Bail out if any instance isn't valid and no force flag\n          if (!(item.isValid() || opts.force)) {\n            return callback(item.errors, null);\n          }\n        }\n      }\n      // Single item\n      else {\n\n        saved = data._saved;\n        // Bail out if instance isn't valid\n        if (!(data.isValid() || opts.force)) {\n          return callback(data.errors, null);\n        }\n        // Already existing instance, use update\n        if (saved) {\n          if (model.config.useTimestamps) {\n            data.updatedAt = new Date();\n          }\n          // Re-route to update\n          return obj.update.apply(obj, [data, {id: data.id},\n              opts, callback]);\n        }\n\n        if (typeof data.beforeSave === 'function') {\n          data.beforeSave();\n        }\n        data.emit('beforeSave');\n        emitFunc();\n      }\n\n      return adapt.insert.apply(adapt, [data, opts, function (err, res) {\n        if (!err) {\n          model[name].emit('save', res);\n          if (!isCollection) {\n            if (typeof data.afterSave === 'function') {\n              data.afterSave();\n            }\n\n            data.emit('save');\n          }\n        }\n        callback(err, res);\n      }]);\n    };\n\n    obj.update = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , data\n        , callback\n        , query\n        , opts\n        , adapt;\n\n      args.unshift('beforeUpdate');\n      model[name].emit.apply(model[name], args);\n      args.shift();\n\n      data = args.shift();\n      callback = args.pop() || function () {};\n      query = args.shift() || {};\n      opts = args.shift() || {};\n\n      if (typeof query == 'string' || typeof query == 'number') {\n        query = {id: query};\n      }\n\n      // Data may by just a bag or params, or an actual instance\n      if (data instanceof model.ModelBase) {\n        // Bail out if instance isn't valid\n        if (!(data.isValid() || opts.force)) {\n          return callback(data.errors, null);\n        }\n        data.emit('beforeUpdate');\n      }\n\n      query = new Query(model[name], query, opts);\n\n      adapt = model.getAdapterForModel(name);\n\n      return adapt.update.apply(adapt, [data, query, function (err, res) {\n        if (!err) {\n          model[name].emit('update', res);\n          // Data may by just a bag or params, or an actual instance\n          if (typeof data.emit == 'function') {\n            if (typeof data.afterUpdate === 'function') {\n              data.afterUpdate();\n            }\n            data.emit('update');\n          }\n        }\n        callback(err, res);\n      }]);\n    };\n\n    obj.remove = function () {\n      var args = Array.prototype.slice.call(arguments)\n        , query\n        , callback\n        , opts\n        , adapt;\n\n      args.unshift('beforeRemove');\n      model[name].emit.apply(model[name], args);\n      args.shift();\n\n      query = args.shift();\n      callback = args.pop() || function () {};\n      opts = args.shift() || {};\n\n      if (typeof query == 'string' || typeof query == 'number') {\n        query = {id: query};\n        opts.limit = 1;\n      }\n\n      query = new Query(model[name], query, opts);\n\n      adapt = model.getAdapterForModel(name);\n\n      return adapt.remove.apply(adapt, [query, function (err, res) {\n        if (!err) {\n          model[name].emit('remove', res);\n        }\n        callback(err, res);\n      }]);\n    };\n\n    obj.getPropertyNames = function () {\n      var reg = model.descriptionRegistry[name]\n        , properties = reg.properties;\n      return Object.keys(properties);\n    };\n\n    obj.modelName = name;\n\n    return obj;\n  };\n\n  this.clearDefinitions = function (defs) {\n    var self = this;\n    defs.forEach(function (m) {\n      // Prefer 'name', accept older 'ctorName'\n      var name = m.name || m.ctorName;\n      // Registration may have happened in the model definition file\n      // if using the old templates. Don't re-register\n      delete self[name];\n    });\n  };\n\n  this.registerDefinitions = function (defs) {\n    var self = this;\n    defs.forEach(function (m) {\n      // Prefer 'name', accept older 'ctorName'\n      var name = m.name || m.ctorName;\n      // Registration may have happened in the model definition file\n      // if using the old templates. Don't re-register\n      if (!self[name]) {\n        self.registerDefinition(name, m.ctor);\n      }\n    });\n    this.createForeignKeys();\n  };\n\n  // Alias to single-def registration method\n  this.register = function (name, ModelDefinition) {\n    return this.registerDefinition(name, ModelDefinition);\n  };\n\n  this.registerDefinition = function (name, ModelDefinition) {\n    var origProto = ModelDefinition.prototype\n      , defined\n      , ModelCtor;\n\n    // Create the place to store the metadata about the model structure\n    // to use to do validations, etc. when constructing\n    model.descriptionRegistry[name] = new model.ModelDescription(name);\n    // Execute all the definition methods to create that metadata\n    ModelDefinition.prototype = new model.ModelDefinitionBase(name);\n    defined = new ModelDefinition();\n\n    // Create the constructor function to use when calling static\n    // ModelCtor.create. Gives them the proper instanceof value,\n    // and .valid, etc. instance-methods.\n    ModelCtor = _createModelItemConstructor(defined);\n\n    // Mix in the static methods like .create and .load\n    utils.mixin(ModelCtor, _createStaticMethodsMixin(name));\n    // Mix on the statics on the definition 'ctor' onto the\n    // instantiated ModelDefinition instance\n    utils.mixin(defined, ModelDefinition);\n    // Mix ModelDefinition instance properties as static properties\n    // for the model item 'ctor'\n    utils.mixin(ModelCtor, defined);\n    // Same with EventEmitter methods\n    utils.enhance(ModelCtor, new EventEmitter());\n\n    // Mix any functions defined directly in the model-item definition\n    // 'constructor' into the original prototype, and set it as the prototype of the\n    // actual constructor\n    utils.mixin(origProto, defined);\n\n    ModelCtor.prototype = new model.ModelBase();\n    // Preserve any inherited shit from the definition proto\n    utils.enhance(ModelCtor.prototype, origProto);\n\n    model[name] = ModelCtor;\n\n    return ModelCtor;\n  };\n\n  this.createItem = function (name, p, o) {\n    var params = p || {}\n      , opts = o || {}\n      , item = new model[name](params);\n\n    // Default to the 'create' scenario\n    opts.scenario = opts.scenario || 'create'\n\n    model[name].emit('beforeCreate', p, o);\n\n    this.validateAndUpdateFromParams(item, params, opts);\n\n    if (this.config.useTimestamps && !item.createdAt) {\n      item.createdAt = new Date();\n    }\n\n    if (typeof item.afterCreate === 'function') {\n      item.afterCreate();\n    }\n    model[name].emit('create', item);\n    return item;\n  };\n\n  this.updateItem = function (item, params, opts) {\n    var data = {}\n      , name = item.type\n      , opts = opts || {};\n\n    // Default to the 'update' scenario\n    opts.scenario = opts.scenario || 'update'\n\n    model[name].emit('beforeUpdateProperties', item, params, opts);\n    item.emit('beforeUpdateProperties');\n\n    utils.mixin(data, item);\n    utils.mixin(data, params);\n    this.validateAndUpdateFromParams(item, data, opts);\n\n    if (typeof item.afterUpdateProperties === 'function') {\n      item.afterUpdateProperties();\n    }\n\n    model[name].emit('updateProperties', item);\n    item.emit('updateProperties');\n\n    return item;\n  };\n\n  this.validateAndUpdateFromParams = function (item, passedParams, opts) {\n    var params\n      , name = item.type\n      , type = model.descriptionRegistry[name]\n      , properties = type.properties\n      , validated = null\n      , errs = null\n      , camelizedKey\n      , skip = opts.skip\n      , scenario = opts.scenario\n      , skipKeys = {}\n      , val;\n\n    if (typeof item.beforeValidate === 'function') {\n      item.beforeValidate(passedParams);\n    }\n    item.emit('beforeValidate')\n    model[name].emit('beforeValidate', item, passedParams);\n\n    // May be revalidating, clear errors\n    delete item.errors;\n\n    // Convert snake_case names in params to camelCase\n    if (this.config.forceCamel) {\n      params = {};\n      for (var p in passedParams) {\n        // Allow leading underscores in the keys for pseudo-privates\n        camelizedKey = utils.string.camelize(p, {leadingUnderscore: true});\n        params[camelizedKey] = passedParams[p];\n      }\n    }\n    else {\n      params = passedParams;\n    }\n\n    // User-input should never contain these -- but we still want\n    // to validate them to make sure the format didn't get fucked up\n    if (typeof item.createdAt != 'undefined') {\n      params.createdAt = item.createdAt;\n    }\n    if (typeof item.updatedAt != 'undefined') {\n      params.updatedAt = item.updatedAt;\n    }\n\n    if (skip) {\n      for (var i in skip) {\n        skipKeys[skip[i]] = true;\n      }\n    }\n\n    for (var p in properties) {\n      if (skipKeys[p]) {\n        continue;\n      }\n\n      validated = this.validateProperty(properties[p], params, {scenario: scenario});\n      // If there are any failed validations, the errs param\n      // contains an Object literal keyed by field name, and the\n      // error message for the first failed validation for that\n      // property\n      // Use raw, invalid value on the instance\n      if (validated.err) {\n        errs = errs || {};\n        errs[p] = validated.err;\n        item[p] = params[p];\n      }\n      // Otherwise add the type-coerced, valid value to the return item\n      else {\n        item[p] = validated.val;\n      }\n    }\n\n    // Should never have been incuded in user input, so safe to\n    // rm these from the params\n    delete params.createdAt;\n    delete params.updatedAt;\n\n    if (errs) {\n      item.errors = errs;\n    }\n\n    if (typeof item.afterValidate === 'function') {\n      item.afterValidate();\n    }\n\n    item.emit('validate')\n    model[name].emit('validate', item);\n\n    return item;\n  };\n\n  this.validateProperty = function (prop, params, opts) {\n\n    var options = opts || {}\n      , name = prop.name\n      , val = params[name]\n      , datatypeName = prop.datatype.toLowerCase()\n      , datatypeValidator = this.datatypes[datatypeName].validate\n      , result\n      , scenario = opts.scenario\n      , locale = options.locale || utils.i18n.getDefaultLocale();\n\n    // Validate for the base datatype only if there actually is a value --\n    // e.g., undefined will fail the validation for Number, even if the\n    // field is optional\n    if (!utils.isEmpty(val)) {\n      // 'Any' datatype\n      if (prop.datatype == '*') {\n        result = {\n          val: val\n        };\n      }\n      // Specific datatype -- perform validation/type-coercion\n      else {\n        result = datatypeValidator(name, val, locale);\n        if (result.err) {\n          return {\n            err: result.err,\n            val: null\n          };\n        }\n      }\n      // Value may have been modified in the datatype check -- e.g.,\n      // 'false' changed to false, '8.0' changed to 8, '2112' changed to\n      // 2112, etc.\n      val = result.val;\n    }\n\n    // Now go through all the base validations for this property\n    var validations = prop.validations\n      , validator\n      , err\n      , rule;\n\n    for (var p in validations) {\n      validator = model.validators[p]\n      rule = utils.mixin({}, validations[p], {scenario: opts.scenario});\n\n      if (typeof validator != 'function') {\n        throw new Error(p + ' is not a valid validator');\n      }\n\n      err = validator(name, val, params, rule, locale);\n      // If there's an error for a validation, don't bother\n      // trying to continue with more validations -- just return\n      // this first error message\n      if (err) {\n        return {\n          err: err,\n          val: null\n        };\n      }\n    }\n\n    // If there weren't any errors, return the value for this property\n    // and no error\n    return {\n      err: null,\n      val: val\n    };\n  };\n\n  this.createAdapter = function (name, config) {\n    return adapters.create(name, config);\n  };\n\n  this.getAdapterInfo = function (name) {\n    return adapters.getAdapterInfo(name);\n  };\n\n  this.getAdapterForModel = function (modelName) {\n    var ctor = this[modelName]\n      , adapter = (ctor && ctor.adapter) || this.defaultAdapter;\n    if (!adapter) {\n      throw new Error('No adapter found for ' + modelName +\n          '. Please define one with `setAdapter`, or define a default' +\n          ' adapter with `model.setDefaultAdapter`.');\n    }\n    return adapter;\n  };\n\n  this.setDefaultAdapter = function (name, config) {\n    var adapter = adapters.create(name, config);\n    this.defaultAdapter = adapter;\n  };\n\n  // FIXME: Move this into an associations lib\n  this.getAssociation = function (main, assn) {\n    var mainName = utils.string.getInflection(main, 'constructor', 'singular')\n      , assnName = utils.string.getInflection(assn, 'constructor', 'singular')\n      , assn\n      , assnItem;\n    assn = this.descriptionRegistry[mainName].associations;\n    for (var p in assn) {\n      assnItem = assn[p][assnName];\n      if (assnItem) {\n        return assnItem;\n      }\n    }\n  };\n\n  this.getAssociationType = function (main, assn) {\n    var mainName = utils.string.getInflection(main, 'constructor', 'singular')\n      , assnName = utils.string.getInflection(assn, 'constructor', 'singular')\n      , assn\n      , assnItem;\n    assn = this.descriptionRegistry[mainName].associations;\n    for (var p in assn) {\n      assnItem = assn[p][assnName];\n      if (assnItem) {\n        return p;\n      }\n    }\n  };\n\n  this.getModelByName = function (name) {\n    return this[name];\n  };\n\n  this.createForeignKeys = function () {\n    var creator;\n    while((creator = _foreignKeyCreators.pop())) {\n      creator();\n    }\n  };\n\n  this.setLocalRequireError = function (msg) {\n    this.localRequireError = msg;\n  };\n\n})());\n\nmodel.ModelDefinitionBase = function (name) {\n  var self = this\n    , reg = model.descriptionRegistry\n    , _createValidator = function (p) {\n        return function () {\n          var args = Array.prototype.slice.call(arguments);\n          args.unshift(p);\n          return self.validates.apply(self, args);\n        };\n      };\n\n  this.name = name;\n\n  this.setAdapter = function (name, config) {\n    var adapter = adapters.create(name, config);\n    this.adapter = adapter;\n  };\n\n  this.property = function (name, datatype, options) {\n    var opts = options || {};\n\n    // Don't allow users to define properties with the same\n    // name as magical system properties\n    if (!opts.isSystem && _systemProperties[name]) {\n      throw new Error('You cannot define the property \"' + name +\n          '\" on a model, as it\\'s a reserved system-property name.');\n    }\n\n    reg[this.name].properties[name] =\n      new model.PropertyDescription(name, datatype, opts);\n  };\n\n  this.defineProperties = function (obj) {\n    var type\n      , options\n      , property;\n\n    for (var name in obj) {\n      property = obj[name];\n\n      if (typeof property === 'string') {\n        type = property;\n        options = {};\n      }\n      else {\n        type = property.type;\n        options = property;\n      }\n\n      this.property(name, type, options);\n    }\n  }\n\n  // (condition, name, [reference], [opts])\n  this.validates = function () {\n    var args = Array.prototype.slice.call(arguments)\n      , arg\n      , condition = args.shift()\n      , name = args.shift()\n      , reference\n      , opts = {};\n    while ((arg = args.pop())) {\n      // Regex for validatesFormat or function for validatesWithFunction\n      // or string param name for validatesConfirmed\n      if (arg instanceof RegExp || typeof arg == 'function' ||\n          typeof arg == 'string') {\n        reference = arg;\n      }\n      else {\n        opts = utils.mixin(opts, arg);\n      }\n    }\n\n    // Old API allows passing simple number to validatesLength\n    if (!isNaN(opts)) {\n      opts = {is: opts};\n    }\n\n    // Default to 'create' and 'update' only for scenarios\n    opts.on = opts.on || ['create', 'update'];\n\n    if (typeof reg[this.name].properties[name] === 'undefined') {\n      throw new Error('Validation cannot be added for \"' + name +\n                      '\": property does not exist on the ' + this.name +\n                      ' model.');\n    }\n\n    reg[this.name].properties[name].validations[condition] =\n        new model.ValidationDescription(condition, reference, opts);\n  };\n\n  // For each of the validators, create a validatesFooBar from\n  // validates('fooBar' ...\n  for (var p in model.validators) {\n    this['validates' + utils.string.capitalize(p)] = _createValidator(p);\n  }\n\n  // Add the base model properties -- these should not be handled by user input\n  if (model.config.useTimestamps) {\n    this.property('createdAt', 'datetime', {isSystem: true});\n    this.property('updatedAt', 'datetime', {isSystem: true});\n  }\n\n  ['hasMany', 'hasOne', 'belongsTo'].forEach(function (assnKey) {\n    self[assnKey] = function (name, options) {\n      var opts = options || {}\n        , assn = reg[self.name].associations[assnKey] || {}\n        , assnName = name\n        , modelName = opts.model || name;\n\n      // Normalize inflection; we don't care which they use\n      assnName = utils.string.getInflection(assnName, 'constructor', 'singular');\n      modelName = utils.string.getInflection(modelName, 'constructor', 'singular');\n\n      assn[assnName] = {\n        name: assnName\n      , model: modelName\n      , through: opts.through\n      , type: assnKey\n      };\n\n      reg[self.name].associations[assnKey] = assn;\n\n      // Set up foreign keys\n      var createForeignKey = function (assnName) {\n        return function () {\n          var ownerModelName\n            , ownedModelName\n            , idKey\n            , datatype\n            , def;\n\n          if (assnKey == 'belongsTo') {\n            ownerModelName = modelName;\n            ownedModelName = self.name;\n            idKey = modelName;\n          }\n          else {\n            ownerModelName = self.name;\n            ownedModelName = modelName;\n            idKey = self.name;\n          }\n\n          if (assnName == modelName) {\n            idKey = utils.string.decapitalize(idKey) + 'Id'\n          }\n          else {\n            idKey = utils.string.decapitalize(assnName) + idKey  + 'Id'\n          }\n\n          if (!reg[ownedModelName]) {\n            throw new Error('Model ' + ownedModelName + ' does not exist.');\n          }\n\n          if (!reg[ownedModelName].properties[idKey]) {\n            def = model[ownerModelName];\n            datatype = model.config.autoIncrementId ? 'int' : 'string';\n\n            reg[ownedModelName].properties[idKey] =\n              new model.PropertyDescription(idKey, datatype);\n          }\n        }\n      };\n\n      // Set up foreign keys except in the case of virtual 'throughs'\n      // FIXME: Hack, let other models get defined first\n      // Should probably listen for an event that signals\n      // base models are set up\n      if (!opts.through) {\n        _foreignKeyCreators.push(createForeignKey(assnName));\n      }\n    };\n  });\n};\n\nmodel.ModelDescription = function (name) {\n  this.name = name;\n  this.properties = {};\n  this.associations = {};\n};\n\nmodel.PropertyDescription = function (name, datatype, o) {\n  var opts = o || {}\n    , validations = {}\n    , validationOpts = utils.mixin({}, opts);\n\n  delete validationOpts.required;\n  delete validationOpts.length;\n  delete validationOpts.format;\n\n  this.name = name;\n  this.datatype = datatype;\n  this.options = opts;\n\n  // Creates results similar to `this.validates`, above in ModelDefinitionBase\n  // Would be great to remove the duplication of logic\n  for (var p in opts) {\n    if (opts.required || opts.length) {\n      validations.present =\n          new model.ValidationDescription('present', null, validationOpts);\n    }\n    if (opts.length) {\n      if (typeof opts.length == 'object') {\n      // {min: 1, max: 2} or {is: 3}\n      validations.length =\n          new model.ValidationDescription('length', null,\n              utils.mixin(opts.length, validationOpts));\n      }\n      // 1 or '1'\n      else {\n      validations.length =\n          new model.ValidationDescription('length', null,\n              utils.mixin({is: opts.length}, validationOpts));\n      }\n    }\n    if (opts.format) {\n      validations.format =\n          new model.ValidationDescription('length', opts.format,\n              validationOpts);\n    }\n  }\n  this.validations = validations;\n};\n\nmodel.ValidationDescription = function (type, reference, opts) {\n  this.type = type;\n  this.reference = reference;\n  this.opts = opts || {};\n};\n\nmodule.exports = model;\n\n// Load last, these depend on index.js\nQuery = require('./query/query').Query;\nmodel.datatypes = require('./datatypes');\nassociation = require('./association');\n\n"},"lineCount":1158}},"error":null,"hash":"6cdb2b8188503a6ff2cd6ad542af3fec","cacheData":{"env":{}}}